{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/disorder/Documents/Projects/course-project-burger-app/src/components/Burger/Burger.js\";\nimport React from \"react\";\nimport classes from \"./Burger.module.css\";\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\n\nconst burger = props => {\n  let transformedIngredients = Object.keys(props.ingredient).map(igKey => {\n    return [...Array(props.ingredient[igKey])].map((_, i) => {\n      return /*#__PURE__*/_jsxDEV(BurgerIngredient, {\n        type: igKey\n      }, igKey + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 16\n      }, this);\n    });\n  }).reduce((arr, el) => {\n    return arr.concat(el);\n  }, []);\n\n  if (transformedIngredients.length === 0) {\n    transformedIngredients = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please start adding ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 30\n    }, this);\n  }\n\n  console.log(transformedIngredients);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.Burger,\n    children: [/*#__PURE__*/_jsxDEV(BurgerIngredient, {\n      type: \"bread-top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), transformedIngredients, /*#__PURE__*/_jsxDEV(BurgerIngredient, {\n      type: \"bread-bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Price: \", props.totalPrice.float()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\nexport default burger;","map":{"version":3,"sources":["/home/disorder/Documents/Projects/course-project-burger-app/src/components/Burger/Burger.js"],"names":["React","classes","BurgerIngredient","burger","props","transformedIngredients","Object","keys","ingredient","map","igKey","Array","_","i","reduce","arr","el","concat","length","console","log","Burger","totalPrice","float"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,MAAIC,sBAAsB,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,UAAlB,EAC1BC,GAD0B,CACrBC,KAAD,IAAW;AACd,WAAO,CAAC,GAAGC,KAAK,CAACP,KAAK,CAACI,UAAN,CAAiBE,KAAjB,CAAD,CAAT,EAAoCD,GAApC,CAAwC,CAACG,CAAD,EAAIC,CAAJ,KAAU;AACvD,0BAAO,QAAC,gBAAD;AAAkC,QAAA,IAAI,EAAEH;AAAxC,SAAuBA,KAAK,GAAGG,CAA/B;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,CAAP;AAGD,GAL0B,EAM1BC,MAN0B,CAMnB,CAACC,GAAD,EAAMC,EAAN,KAAa;AACnB,WAAOD,GAAG,CAACE,MAAJ,CAAWD,EAAX,CAAP;AACD,GAR0B,EAQxB,EARwB,CAA7B;;AASA,MAAIX,sBAAsB,CAACa,MAAvB,KAAkC,CAAtC,EAAyC;AACvCb,IAAAA,sBAAsB,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAzB;AACD;;AACDc,EAAAA,OAAO,CAACC,GAAR,CAAYf,sBAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACoB,MAAxB;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGhB,sBAFH,eAGE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,kCAAiBD,KAAK,CAACkB,UAAN,CAAiBC,KAAjB,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAtBD;;AAwBA,eAAepB,MAAf","sourcesContent":["import React from \"react\";\nimport classes from \"./Burger.module.css\";\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\n\nconst burger = (props) => {\n  let transformedIngredients = Object.keys(props.ingredient)\n    .map((igKey) => {\n      return [...Array(props.ingredient[igKey])].map((_, i) => {\n        return <BurgerIngredient key={igKey + i} type={igKey} />;\n      });\n    })\n    .reduce((arr, el) => {\n      return arr.concat(el);\n    }, []);\n  if (transformedIngredients.length === 0) {\n    transformedIngredients = <p>Please start adding ingredients</p>;\n  }\n  console.log(transformedIngredients);\n  return (\n    <div className={classes.Burger}>\n      <BurgerIngredient type=\"bread-top\" />\n      {transformedIngredients}\n      <BurgerIngredient type=\"bread-bottom\" />\n      <p>Total Price: {props.totalPrice.float()}</p>\n    </div>\n  );\n};\n\nexport default burger;\n"]},"metadata":{},"sourceType":"module"}